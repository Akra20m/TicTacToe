{"version":3,"sources":["components/Box.js","components/App.js","index.js"],"names":["Box","props","className","highlight","onClick","value","App","useState","Array","fill","boardBoxes","setBoardBoxes","isNext","setIsNext","turnNum","setturnNum","index","allBoxes","checkWinner","winner","highlightArray","map","box","key","bind","renderBoxes","winningSequence","i","length","I","II","III","ReactDom","render","document","querySelector"],"mappings":"oKAaeA,G,KATH,SAAAC,GACV,IAAIC,EAAY,OAASD,EAAME,UAAY,aAAe,IAC1D,OACE,yBAAKD,UAAWA,EAAWE,QAASH,EAAMG,SACvCH,EAAMI,SCgEEC,EAnEH,WAAO,IAAD,EACoBC,mBAASC,MAAM,GAAGC,KAAK,OAD3C,mBACTC,EADS,KACGC,EADH,OAEYJ,mBAAS,KAFrB,mBAETK,EAFS,KAEDC,EAFC,OAGYN,mBAAS,GAHrB,mBAGXO,EAHW,KAGFC,EAHE,KAIVX,EAAU,SAAAY,GACd,IAAMC,EAAQ,YAAOP,GACjBO,EAASD,IAAUE,EAAYD,GAAUE,SAC7CF,EAASD,GAAoB,MAAXJ,EAAiB,IAAM,IACzCD,EAAcM,GACdJ,EAAqB,MAAXD,EAAiB,IAAM,KACjCG,IAAaD,KAoBf,OACE,yBAAKZ,UAAU,aACb,wBAAIA,UAAU,SAAd,OACM,0BAAMA,UAAU,OAAhB,OADN,IACuC,0BAAMA,UAAU,UAAhB,QAEvC,yBAAKA,UAAU,SAlBC,WAClB,IAAIkB,EAAiBF,EAAYR,GAAYU,eAC7C,OAAOV,EAAWW,KAAI,SAACC,EAAKN,GAC1B,OACE,kBAAC,EAAD,CACEO,IAAKP,EACLb,UAAWiB,EAAeJ,GAC1BX,MAAOiB,EACPlB,QAASA,EAAQoB,U,EAAWR,QAURS,IACvB,+BACD,yBAAKvB,UAAU,WACZgB,EAAYR,GAAYS,OACvB,uCACS,IACP,0BACEjB,UACqC,MAAnCgB,EAAYR,GAAYS,OAAiB,UAAY,WAGtDD,EAAYR,GAAYS,QACnB,IARV,OAWc,IAAZL,EACF,eAEA,uCACS,IACP,0BAAMZ,UAAsB,MAAXU,EAAiB,UAAY,WAChC,MAAXA,EAAiB,IAAM,KAClB,IAJV,SASJ,4BAAQR,QAlDE,WACZO,EAAcH,MAAM,GAAGC,KAAK,OAC5BI,EAAU,KACVE,EAAW,KA+CT,eAON,SAASG,EAAYD,GAYnB,IAXA,IAAIG,EAAiBZ,MAAM,GAAGC,MAAK,GAC7BiB,EAAkB,CACtB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAgBE,OAAQD,IAAK,CAAC,IAAD,cAC5BD,EAAgBC,GADY,GAC1CE,EAD0C,KACvCC,EADuC,KACnCC,EADmC,KAE/C,GACEd,EAASY,IACTZ,EAASY,KAAOZ,EAASa,IACzBb,EAASa,KAAQb,EAASc,IAC1Bd,EAASc,KAASd,EAASY,GAK3B,OAHAT,EAAeS,IAAK,EACpBT,EAAeU,IAAM,EACrBV,EAAeW,IAAO,EACf,CAAEZ,OAAQF,EAASY,GAAIT,eAAgBA,GAGlD,MAAO,CAAED,OAAQ,KAAMC,eAAgBA,GC/FzCY,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.3bf3ea59.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"../style.css\";\r\n\r\nconst Box = props => {\r\n  let className = \"box\" + (props.highlight ? \" highlight\" : \"\");\r\n  return (\r\n    <div className={className} onClick={props.onClick}>\r\n      {props.value}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Box;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Box from \"./Box\";\r\nimport \"../style.css\";\r\n\r\nconst App = () => {\r\n  const [boardBoxes, setBoardBoxes] = useState(Array(9).fill(null));\r\n  const [isNext, setIsNext] = useState(\"x\");\r\n  let [turnNum, setturnNum] = useState(0);\r\n  const onClick = index => {\r\n    const allBoxes = [...boardBoxes];\r\n    if (allBoxes[index] || checkWinner(allBoxes).winner) return;\r\n    allBoxes[index] = isNext === \"x\" ? \"X\" : \"O\";\r\n    setBoardBoxes(allBoxes);\r\n    setIsNext(isNext === \"x\" ? \"o\" : \"x\");\r\n    setturnNum(++turnNum);\r\n  };\r\n  const retry = () => {\r\n    setBoardBoxes(Array(9).fill(null));\r\n    setIsNext(\"x\");\r\n    setturnNum(0);\r\n  };\r\n  const renderBoxes = () => {\r\n    let highlightArray = checkWinner(boardBoxes).highlightArray;\r\n    return boardBoxes.map((box, index) => {\r\n      return (\r\n        <Box\r\n          key={index}\r\n          highlight={highlightArray[index]}\r\n          value={box}\r\n          onClick={onClick.bind(this, index)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">\r\n        Tic <span className=\"red\">Tac</span> <span className=\"yellow\">Toe</span>\r\n      </h1>\r\n      <div className=\"board\">{renderBoxes()}</div>\r\n      {<span></span>}\r\n      <div className=\"message\">\r\n        {checkWinner(boardBoxes).winner ? (\r\n          <span>\r\n            Player{\" \"}\r\n            <span\r\n              className={\r\n                checkWinner(boardBoxes).winner === \"x\" ? \"playerX\" : \"playerO\"\r\n              }\r\n            >\r\n              {checkWinner(boardBoxes).winner}\r\n            </span>{\" \"}\r\n            won\r\n          </span>\r\n        ) : turnNum === 9 ? (\r\n          \"It is a draw\"\r\n        ) : (\r\n          <span>\r\n            Player{\" \"}\r\n            <span className={isNext === \"x\" ? \"playerX\" : \"playerO\"}>\r\n              {isNext === \"x\" ? \"X\" : \"O\"}\r\n            </span>{\" \"}\r\n            turn\r\n          </span>\r\n        )}\r\n      </div>\r\n      <button onClick={retry}>Try Again</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nfunction checkWinner(allBoxes) {\r\n  let highlightArray = Array(9).fill(false);\r\n  const winningSequence = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < winningSequence.length; i++) {\r\n    let [I, II, III] = winningSequence[i];\r\n    if (\r\n      allBoxes[I] &&\r\n      allBoxes[I] === allBoxes[II] &&\r\n      allBoxes[II] === allBoxes[III] &&\r\n      allBoxes[III] === allBoxes[I]\r\n    ) {\r\n      highlightArray[I] = true;\r\n      highlightArray[II] = true;\r\n      highlightArray[III] = true;\r\n      return { winner: allBoxes[I], highlightArray: highlightArray };\r\n    }\r\n  }\r\n  return { winner: null, highlightArray: highlightArray };\r\n}\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDom.render(\r\n    <App/>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}